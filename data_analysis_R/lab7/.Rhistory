contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, length)
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov1.out <- aov(var ~ df$spray, data=InsectSprays)
# aov2 <- aov(var ~ df$spray, data=InsectSprays)
# summary(aov2)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, length)
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov1.out <- aov(x1 ~ df$spray, data=InsectSprays)
# aov2 <- aov(var ~ df$spray, data=InsectSprays)
# summary(aov2)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, length)
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov1.out <- aov(x1 ~ df$spray, data=df)
# aov2 <- aov(var ~ df$spray, data=InsectSprays)
# summary(aov2)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, length)
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov1.out <- aov(count ~ df$spray, data=df)
# aov2 <- aov(var ~ df$spray, data=InsectSprays)
# summary(aov2)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, length)
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov1.out <- aov(count ~ df$spray, data=df)
summary(aov1.out)
# aov2 <- aov(var ~ df$spray, data=InsectSprays)
# summary(aov2)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, length)
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov1.out <- aov(mean ~ df$spray, data=df)
summary(aov1.out)
# aov2 <- aov(var ~ df$spray, data=InsectSprays)
# summary(aov2)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, length)
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov1.out <- aov(count ~ df$spray, data=df)
summary(aov1.out)
# aov2 <- aov(var ~ df$spray, data=InsectSprays)
# summary(aov2)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, length)
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov.out <- aov(count ~ df$spray, data=df)
summary(aov.out)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, function(Trees) length(unique(Trees)))
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov.out <- aov(count ~ df$spray, data=df)
summary(aov.out)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, function(sprays) length(unique(sprays)))
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov.out <- aov(count ~ df$spray, data=df)
summary(aov.out)
# Exercise 1
contamined <- c(600, 590, 570, 570, 565, 580)
background <- c(560, 550, 570, 550, 570, 590, 550, 580)
var(background) # 228.57
var(contamined) # 184.16
# Exercise 2
x <- c(1.83, 0.50, 1.62, 2.48, 1.68, 1.88, 1.55, 3.06, 1.30)
y <- c(0.878, 0.647, 0.598, 2.05, 1.06, 1.29, 1.06, 3.14, 1.29)
ks.test(x, y) # 0.03663 < .05
# x and y are from different distributions
# Exercise 3
tbl <- table(quine[quine$Sex == "F",]$Days, quine$Eth)
chisq.test(tbl) # p=0.1682 > 0.005
# Exercise 4
df <- data.frame(InsectSprays)
x1 <- tapply(df$count, df$spray, mean)
x2 <- tapply(df$count, df$spray, var)
x3 <- tapply(df$count, df$spray, function(sprays) length(unique(sprays)))
sprays <- levels(factor(df$spray))
boxplot(x1 ~ sprays) # mean
boxplot(x2 ~ sprays) # variance
boxplot(x3 ~ sprays) # count
aov.out <- aov(count ~ df$spray, data=df)
summary(aov.out)
# Exercise 3
df <- read.csv("database.csv", header=FALSE)
# Exercise 1
setwd("~/Workspace/uvt/data_analysis_R/lab7/")
# Exercise 3
df <- read.csv("database.csv", header=FALSE)
View(df)
View(df)
# Exercise 3
df <- read.csv("database.csv", header=FALSE)
View(df)
levels(df$V2)
unique(df$V2)
unique(df$V3)
unique(df$V4)
unique(df$V5)
unique(df$V6)
unique(df$V6)
unique(df$V8)
unique(df$V9)
unique(df$V10)
unique(df$V11)
# Exercise 3
df <- read.csv("database.csv", header=FALSE)
test.train <- createDataPartition(y=df$V11,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(caret)
df <- read.csv("database.csv", header=FALSE)
test.train <- createDataPartition(y=df$V11,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
# accuracy 1.0 for K=1,2,3
for (k in 1:10) {
predicted <- knn(train, test, cl=train$V11, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$Species)))
}
df <- read.csv("database.csv", header=FALSE)
df[is.na(df)] <- 0
test.train <- createDataPartition(y=df$V11,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
# accuracy 1.0 for K=1,2,3
for (k in 1:10) {
predicted <- knn(train, test, cl=train$V11, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$Species)))
}
df
# Exercise 3
df <- read.csv("database.csv", header=FALSE)
df[is.na(df)] <- 0
test.train <- createDataPartition(y=df$V11,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
# accuracy 1.0 for K=1,2,3
for (k in 1:10) {
predicted <- knn(train, test, cl=train$V11, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$Species)))
}
df <- read.csv("database.csv", header=FALSE)
df[is.na(df)] <- 0
df <- read.csv("database.csv", header=FALSE)
df[is.na(df)] <- 0
df$V7 <- as.numeric(df$V7)
df <- read.csv("database.csv", header=FALSE)
df[is.na(df)] <- 0
df$V7 <- as.numeric(df$V7)
test.train <- createDataPartition(y=df$V11,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
for (k in 1:10) {
predicted <- knn(train, test, cl=train$V11, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$Species)))
}
library(class)
for (k in 1:10) {
predicted <- knn(train, test, cl=train$V11, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$V11)))
}
library(class)
for (k in 1:10) {
predicted <- knn(train, test, cl=train$V11, k=k)
# printing confusion matrix
print("K = ", k)
print(confusionMatrix(table(predicted, test$V11)))
}
library(class)
for (k in 1:10) {
predicted <- knn(train, test, cl=train$V11, k=k)
# printing confusion matrix
print(c("K = ", k))
print(confusionMatrix(table(predicted, test$V11)))
}
library(class)
# accuracy 1.0 for K=1,2,3
for (k in 1:3) {
predicted <- knn(train, test, cl=train$Species, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$Species)))
}
# Exercise 1
setwd("~/Workspace/uvt/data_analysis_R/lab7/")
ds <- read.csv("logregr1.csv")
fit <- glm(hon ~ female + math, data=ds)
plot(fit)
plot(df) # species are the response variable
# split data in two parts, train and test
library(caret)
test.train <- createDataPartition(y=df$Species,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
# accuracy 1.0 for K=1,2,3
for (k in 1:3) {
predicted <- knn(train, test, cl=train$Species, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$Species)))
}
# Exercise 2
df <- data.frame(iris)
df$Species <- as.numeric(df$Species)
plot(df) # species are the response variable
# split data in two parts, train and test
library(caret)
test.train <- createDataPartition(y=df$Species,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
# accuracy 1.0 for K=1,2,3
for (k in 1:3) {
predicted <- knn(train, test, cl=train$Species, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$Species)))
}
setwd("~/Workspace/uvt/data_analysis_R/lab7/")
ds <- read.csv("logregr1.csv")
fit <- glm(hon ~ female + math, data=ds)
plot(fit)
fit
plot(fit)
ds <- read.csv("logregr1.csv")
# Exercise 1
setwd("~/Workspace/uvt/data_analysis_R/lab7/")
ds <- read.csv("logregr1.csv")
fit <- glm(hon ~ female + math, data=ds)
# weights:
# - female: 0.11
# - math: 0.02
# female variable is aprox. 50 times more significant
plot(fit)
plot(df) # species are the response variable
# split data in two parts, train and test
library(caret)
test.train <- createDataPartition(y=df$Species,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
# accuracy 1.0 for K=1,2,3
for (k in 1:3) {
predicted <- knn(train, test, cl=train$Species, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$Species)))
}
# Exercise 3
df <- read.csv("database.csv", header=FALSE)
df[is.na(df)] <- 0
df$V7 <- as.numeric(df$V7)
test.train <- createDataPartition(y=df$V11,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
# best accuracy: K = 5, accuracy: 0.64
for (k in 1:10) {
predicted <- knn(train, test, cl=train$V11, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$V11)))
}
plot(ds)
View(ds)
ds[ds$hon == 1]
ds[ds$hon == 1,]
hons <- ds[ds$hon == 1,]
mean(hons$math)
mean(ds$math)
# Exercise 1
setwd("~/Workspace/uvt/data_analysis_R/lab7/")
ds <- read.csv("logregr1.csv")
fit <- glm(hon ~ female + math, data=ds)
# weights:
# - female: 0.11
# - math: 0.02
# math variable is aprox. 50 times more significant
plot(fit)
fit
exp(fit$coefficients)
# Exercise 1
setwd("~/Workspace/uvt/data_analysis_R/lab7/")
ds <- read.csv("logregr1.csv")
fit <- glm(hon ~ female + math, data=ds)
plot(fit)
# Exercise 2
df <- data.frame(iris)
df$Species <- as.numeric(df$Species)
plot(df) # species are the response variable
# split data in two parts, train and test
library(caret)
test.train <- createDataPartition(y=df$Species,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
# accuracy 1.0 for K=1,2,3
for (k in 1:3) {
predicted <- knn(train, test, cl=train$Species, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$Species)))
}
# Exercise 3
df <- read.csv("database.csv", header=FALSE)
df[is.na(df)] <- 0
df$V7 <- as.numeric(df$V7)
test.train <- createDataPartition(y=df$V11,p=0.8,list=FALSE)
train <- df[test.train,]
test <- df[-test.train,]
library(class)
# best accuracy: K = 5, accuracy: 0.64
for (k in 1:10) {
predicted <- knn(train, test, cl=train$V11, k=k)
# printing confusion matrix
print(confusionMatrix(table(predicted, test$V11)))
}
